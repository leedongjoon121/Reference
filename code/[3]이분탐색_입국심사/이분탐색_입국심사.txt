import java.util.*;

class Solution {
    public long solution(int n, int[] times) {
     	/*
		 * 찾아야하는 target : 사람 수 
		 * 사람수(sum) = 주어진 시간(min) / 해결시간(times)
		 * 이분 탐색 할 것 : 심사를 받는데 걸리는 시간 (mid)
		 * mid : 주어진 시간,  times :해결시간 
		 * 
		 * 사람수 >= n :주어진 시간 안에 더 처리가능, 따라서 최소시간이 아님
		 * 사람수 < n : 주어진 시간 안에 해결이 불가능 
                  * < long 형에 주의 해야 한다.. int로 하면 틀림 >
		 */
                 long answer = 0;		
		Arrays.sort(times); // 해결 시간을 순서대로 정렬 
		long left = 1; // 최선의 경우, (입국심사 1명도 올수 있음) 
		long right = (long)times[times.length-1] * n; // 최악의 경우
		
		while(left <= right) {
			long mid = (left+right) / 2;
			long sum = 0; // 검색한 사람 수 
			
			for(int i = 0; i < times.length; i++) {
				sum += mid / times[i];
			}
			
			if(n > sum) { // 심사한 사람의 수가 더 적으므로, 시간을 늘려야 한다. 
				left = mid+1;
			}else { // 심사하는 사람의 수가 더 많거나 같으므로, 시간을 줄여야 한다.
				right = mid-1;
				answer = mid;
			}		
		}
		
		return answer;
    }
}